version: "3"
services:
  #PHP Service
  app:
    build:
      context: .
      dockerfile: ./docker-custom/Dockerfile
    env_file:
      - .env
    image: laravel-react-blade.app
    container_name: laravel-react-blade.app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: "${APP_NAME}"
      SERVICE_TAGS: "${APP_ENV}"
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker-custom/config/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./docker-custom/config/php/php.ini:/usr/local/etc/php/php.ini
      - ./docker-custom/config/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
    networks:
      - laravel-react-blade-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: laravel-react-blade.webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker-custom/config/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - laravel-react-blade-network

  #MySQL Service
  db:
    image: mysql:5.7.22
    container_name: laravel-react-blade.db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      SERVICE_TAGS: ${APP_ENV}
      SERVICE_NAME: "${DB_CONNECTION}"
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker-custom/config/mysql/my.cnf:/etc/mysql/my.cnf
      - ./docker-custom/config/mysql/init-file.sql:/tmp/init-file.sql
    networks:
      - laravel-react-blade-network

#Docker Networks
networks:
  laravel-react-blade-network:
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local
